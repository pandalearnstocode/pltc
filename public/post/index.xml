<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Posts on Panda Learns To Code</title>
    <link>/post/</link>
    <description>Recent content in Posts on Panda Learns To Code</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    <copyright>© This post is licensed under a Creative Commons Attribution-NonCommercial 4.0 International License，please give source if you wish to quote or reproduce.</copyright>
    <lastBuildDate>Fri, 29 Nov 2019 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="/post/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Tutorial: Quick EDA in Python using Pandas Profiling</title>
      <link>/post/tutorial-quick-eda-in-python-using-pandas-profiling/</link>
      <pubDate>Fri, 29 Nov 2019 00:00:00 +0000</pubDate>
      
      <guid>/post/tutorial-quick-eda-in-python-using-pandas-profiling/</guid>
      <description>&lt;p&gt;EDA is one of the most important part of any data science work. Recently I have came accross a library called pandas profiling which makes it easier and creates a beautiful shareable report. So, here I am sharing some resouces related to  the project which I feel can be useful.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Docker for Data Science</title>
      <link>/post/docker-for-data-science/</link>
      <pubDate>Sun, 25 Aug 2019 00:00:00 +0000</pubDate>
      
      <guid>/post/docker-for-data-science/</guid>
      <description>One of the key problem which I have encountered while working in data science domains for couple of years is reproducibility. This is true for any form of research but it has special importance in data science domain especially if you are working with a code which will be consumed by others. If you are dealing with a code which is not reproducible then you can fix it but if your code is used by others there is no one to fix the problem which is not an error in true sense.</description>
    </item>
    
    <item>
      <title>Optimized docker images for Data Science With FastAPI</title>
      <link>/post/optimized-docker-images-for-data-science-with-fastapi/</link>
      <pubDate>Sun, 21 Jul 2019 00:00:00 +0000</pubDate>
      
      <guid>/post/optimized-docker-images-for-data-science-with-fastapi/</guid>
      <description>&lt;p&gt;Lets build a container based application which is optimized in terms of resources and integrate FastAPI with it. It will help to interact the app to connect to the internet and at the same time we will try to get the bast of data science stack in python. Here is the basic layout which we will try to achieve,&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Python type checking using mypy</title>
      <link>/post/python-type-checking-using-mypy/</link>
      <pubDate>Tue, 25 Jun 2019 00:00:00 +0000</pubDate>
      
      <guid>/post/python-type-checking-using-mypy/</guid>
      <description>&lt;h1 id=&#34;type-checking-in-python&#34;&gt;Type checking in Python&lt;/h1&gt;

&lt;h2 id=&#34;python-is-strongly-dynamically-typed-programming-language&#34;&gt;Python is strongly, dynamically typed programming language.&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;Strong&lt;/strong&gt; typing means that the type of a value doesn&amp;rsquo;t change in unexpected ways. A string containing only digits doesn&amp;rsquo;t magically become a number, as may happen in Perl. Every change of type requires an explicit conversion.&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;&lt;strong&gt;Dynamic&lt;/strong&gt; typing means that runtime objects (values) have a type, as opposed to static typing where variables have a type.&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;For details check &lt;a href=&#34;https://stackoverflow.com/questions/11328920/is-python-strongly-typed&#34;&gt;this&lt;/a&gt;.&lt;/p&gt;</description>
    </item>
    
  </channel>
</rss>