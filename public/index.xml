<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Panda Learns To Code</title>
    <link>/</link>
    <description>Recent content on Panda Learns To Code</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    <copyright>© This post is licensed under a Creative Commons Attribution-NonCommercial 4.0 International License，please give source if you wish to quote or reproduce.</copyright>
    <lastBuildDate>Wed, 09 Apr 2014 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Links</title>
      <link>/links/</link>
      <pubDate>Wed, 09 Apr 2014 00:00:00 +0000</pubDate>
      
      <guid>/links/</guid>
      <description>Ritchie and his friends.</description>
    </item>
    
    <item>
      <title>About</title>
      <link>/about/</link>
      <pubDate>Wed, 09 Apr 2014 00:00:00 +0000</pubDate>
      
      <guid>/about/</guid>
      <description>Hugo is a static site engine written in Go.
It makes use of a variety of open source projects including:
 Cobra Viper J Walter Weatherman Cast  Learn more and contribute on GitHub.</description>
    </item>
    
    <item>
      <title>Optimized docker images for Data Science With FastAPI</title>
      <link>/post/optimized-docker-images-for-data-science-with-fastapi/</link>
      <pubDate>Sun, 21 Jul 2019 00:00:00 +0000</pubDate>
      
      <guid>/post/optimized-docker-images-for-data-science-with-fastapi/</guid>
      <description>&lt;p&gt;Lets build a container based application which is optimized in terms of resources and integrate FastAPI with it. It will help to interact the app to connect to the internet and at the same time we will try to get the bast of data science stack in python. Here is the basic layout which we will try to achieve,&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Python type checking using mypy</title>
      <link>/post/python-type-checking-using-mypy/</link>
      <pubDate>Tue, 25 Jun 2019 00:00:00 +0000</pubDate>
      
      <guid>/post/python-type-checking-using-mypy/</guid>
      <description>&lt;h1 id=&#34;type-checking-in-python&#34;&gt;Type checking in Python&lt;/h1&gt;

&lt;h2 id=&#34;python-is-strongly-dynamically-typed-programming-language&#34;&gt;Python is strongly, dynamically typed programming language.&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;Strong&lt;/strong&gt; typing means that the type of a value doesn&amp;rsquo;t change in unexpected ways. A string containing only digits doesn&amp;rsquo;t magically become a number, as may happen in Perl. Every change of type requires an explicit conversion.&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;&lt;strong&gt;Dynamic&lt;/strong&gt; typing means that runtime objects (values) have a type, as opposed to static typing where variables have a type.&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;For details check &lt;a href=&#34;https://stackoverflow.com/questions/11328920/is-python-strongly-typed&#34;&gt;this&lt;/a&gt;.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Resume</title>
      <link>/resume/</link>
      <pubDate>Fri, 01 Dec 2017 00:00:00 +0000</pubDate>
      
      <guid>/resume/</guid>
      <description>This is my resume.</description>
    </item>
    
  </channel>
</rss>